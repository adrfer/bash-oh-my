# Clone files and/or directories
clone() {
  [[ "${#}" = 1 ]] || {
    echo 'Usage: clone WHATEVER'
    return 1
  }

  cp -rf ${1%/}{," copy $(date +%s)"}
}

# Jump to a directory, create it if it doesn't exist
jump() {
  [[ "${#}" = 1 ]] || {
    echo 'Usage: jump PATH'
    return 1
  }

  [[ -n "${1}" ]] && mkdir -p "${1}"
  cd "${1}"
}

# Show all directories included in the PATH
path() {
  [[ "${#}" = 0 ]] || {
    echo 'Usage: path'
    return 1
  }

  echo -e "${PATH//:/\\n}"
}

# Navigate directories upwards easily
up() {
  level="${1}"
  [[ -z "${level}" ]] && level=1

  [[ "${level}" =~ ^[1-9]+$ ]] || {
    echo 'Usage: up NUMBER'
    return 1
  }

  for whatever in $(seq "${level}"); do
    cd ../
  done
}

# Show current IP address
ip() {
  [[ "${#}" = 0 ]] || {
    echo 'Usage: ip'
    return 1
  }

  curl -s checkip.dyndns.org | grep -Eo '[0-9\.]+'
}

# Redirect the output of a command to a black hole
nullify() {
  "${@}" >/dev/null 2>&1
}

# Check if a command exists
exists() {
  [[ "${#}" = 1 ]] || {
    echo 'Usage: exist'
    return 1
  }

  [[ -x $(command -v "${1}" 2>/dev/null) ]]
}

# XTerm Control Sequences
# From http://invisible-island.net/xterm/ctlseqs/ctlseqs.html
# Search for "CSI Ps ; Ps ; Ps t" or "window manipulation"

# Resize window to specific height and width
terminal-resize-to() {
  height="${1}"
  width="${2}"

  [[ "${height}" =~ ^[0-9]+$ && "${width}" =~ ^[0-9]+$ ]] || {
    echo 'Usage: terminal-resize-to HEIGHT WIDTH'
    return 1
  }

  printf "\e[8;${height};${width}t"
}

terminal-resize-to-default-mode() {
  [[ "${#}" = 0 ]] || {
    echo 'Usage: terminal-resize-to-default-mode'
    return 1
  }

  terminal-resize-to 24 80
}

# Minimize window for a few seconds, then restore it
terminal-go-away-for() {
  seconds="${1}"

  [[ "${seconds}" =~ ^[1-9]+$ ]] || {
    echo 'Usage: terminal-go-away-for SECONDS'
    return 1
  }

  printf '\e[2t' && sleep "${seconds}" && printf '\e[1t'
}

# Move window to the top-left corner of the monitor
terminal-go-to-top-left-corner() {
  [[ "${#}" = 0 ]] || {
    echo 'Usage: terminal-go-to-top-left-corner'
    return 1
  }

  printf '\e[3;0;0t'
}

# Take the left size of the monitor
terminal-take-left-size() {
  [[ "${#}" = 0 ]] || {
    echo 'Usage: terminal-take-left-size'
    return 1
  }

  terminal-go-to-top-left-corner
  # Note: Could have used `tput cols' to keep the width
  terminal-resize-to 0 80
}
